Caching blobs under "/var/cache/blobs".

Pulling image quay.io/thoth-station/s2i-thoth-ubi8-py36 ...
Getting image source signatures
Copying blob sha256:6cc5487eb078291c64e0539c6d57546606b3936b71eabc7eec7960d069927ba4
Copying blob sha256:71391dc11a78542160544b68e45bc123ff55a2e84aeb6fa99b672d75765bc2f8
Copying blob sha256:d5e8f7f1544a0b24f6a422173079f16930b1b17b81e57cdeeb07f53a9629a4de
Copying blob sha256:77c58f19bd6e67185938abb6bbb6ec229e07a5e607453904294d982de141d2f0
Copying blob sha256:47db82df7f3f4393c1f19c362a2db2c47ca049b6fb20bef041dfc9bdb12a4504
Copying blob sha256:d1080172124d46731af46c7e94f0b9912e1e8ae90962cd387d2b020f7b9567a3
Copying blob sha256:3407c8ea636172ca2a5ebdb6eb5aea6c25d016b63dbdf0869e23743fb78ea465
Copying config sha256:854bbe1d2e371b31d09388043c0c42b31702443d25fde7f49dceba1a46a25180
Writing manifest to image destination
Storing signatures
STEP 1: FROM quay.io/thoth-station/s2i-thoth-ubi8-py36
STEP 2: ENV "LANG"="en_US.UTF-8" "HOME"="/home/amun/" "PIPENV_CACHE_DIR"="/home/amun/.cache" "PIPENV_COLORBLIND"="1" "PIPENV_HIDE_EMOJIS"="1" "PIPENV_NOSPIN"="1" "PIPENV_VERBOSITY"="1"
3e199d9ae3cd48deb9969e86b2607f704fe71ab5b1e3d792caf2bf91c250262c
STEP 3: USER root
6df91373a2ba2f74031bd259cf0836412cdad4f8ac409bec4f4df44c42ac503e
STEP 4: RUN { { [ -f '/usr/bin/dnf' ] && INSTALL_CMD='dnf install -y'; } || { [ -f '/usr/bin/yum' ] && INSTALL_CMD='yum install -y'; } || { INSTALL_CMD='apt-get install'; } }; eval $INSTALL_CMD which python3-pip
Updating Subscription Management repositories.
Unable to read consumer identity
Subscription Manager is operating in container mode.
This system is not registered to Red Hat Subscription Management. You can use subscription-manager to register.
Red Hat Universal Base Image 8 (RPMs) - BaseOS   47 kB/s | 3.8 kB     00:00
Red Hat Universal Base Image 8 (RPMs) - AppStre  69 kB/s | 4.2 kB     00:00
Red Hat Universal Base Image 8 (RPMs) - AppStre  16 MB/s | 3.9 MB     00:00
Red Hat Universal Base Image 8 (RPMs) - CodeRea  76 kB/s | 3.8 kB     00:00
Package which-2.21-12.el8.x86_64 is already installed.
Package python3-pip-9.0.3-16.el8.noarch is already installed.
Dependencies resolved.
Nothing to do.
Complete!
7b310bc95a0e31a32204d499be9518ccef823f4992c062f50aeb8384136e2125
STEP 5: RUN pip3 install --force-reinstall --upgrade micropipenv[toml]
Collecting micropipenv[toml]
  Downloading https://files.pythonhosted.org/packages/02/51/4239d3af3c6748519d8b45d32b43afb0059cad63a24ccd1c9e72d26fd22c/micropipenv-0.5.2-py3-none-any.whl
Collecting pip>=9 (from micropipenv[toml])
  Downloading https://files.pythonhosted.org/packages/bd/b1/56a834acdbe23b486dea16aaf4c27ed28eb292695b90d01dff96c96597de/pip-20.2.1-py2.py3-none-any.whl (1.5MB)
Collecting toml; extra == "toml" (from micropipenv[toml])
  Downloading https://files.pythonhosted.org/packages/9f/e1/1b40b80f2e1663a6b9f497123c11d7d988c0919abbf3c3f2688e448c5363/toml-0.10.1-py2.py3-none-any.whl
Installing collected packages: pip, toml, micropipenv
  Found existing installation: pip 9.0.3
    Uninstalling pip-9.0.3:
      Successfully uninstalled pip-9.0.3
Successfully installed micropipenv-0.5.2 pip-20.2.1 toml-0.10.1
714cfaac8ee204c538dc47440d41d1399c241115d07c9a89c527b66b8a943b43
STEP 6: RUN mkdir -p /home/amun && chmod -R 777 /home/amun
67b101d229fd79757245006703c241a66dc6975d470ee45bd4444ac28a531274
STEP 7: RUN echo -e "[[source]]\\nname = \"pypi\"\\nurl = \"https://pypi.org/simple\"\\nverify_ssl = true\\n\\n[dev-packages]\\n\\n[requires]\\npython_version = \"3.6\"\\n\\n[packages.tensorflow-cpu]\\nindex = \"pypi\"\\nversion = \"==2.2.0\"\\n" > "/home/amun/Pipfile"
f724021fd43aa5ef3985629ed850a7869496de083133c6a3f495e657568e7484
STEP 8: RUN echo -e "{\\n    \"_meta\": {\\n        \"hash\": {\\n            \"sha256\": \"a32090c75d91fc10ba89cb4177ae0b13e246dd2b5540cacca454fe1b3247f4ae\"\\n        },\\n        \"pipfile-spec\": 6,\\n        \"requires\": {\\n            \"python_version\": \"3.6\"\\n        },\\n        \"sources\": [\\n            {\\n                \"name\": \"pypi\",\\n                \"url\": \"https://pypi.org/simple\",\\n                \"verify_ssl\": true\\n            }\\n        ]\\n    },\\n    \"default\": {\\n        \"absl-py\": {\\n            \"hashes\": [\\n                \"sha256:75e737d6ce7723d9ff9b7aa1ba3233c34be62ef18d5859e706b8fdc828989830\"\\n            ],\\n            \"version\": \"==0.9.0\"\\n        },\\n        \"astunparse\": {\\n            \"hashes\": [\\n                \"sha256:5ad93a8456f0d084c3456d059fd9a92cce667963232cbf763eac3bc5b7940872\",\\n                \"sha256:c2652417f2c8b5bb325c885ae329bdf3f86424075c4fd1a128674bc6fba4b8e8\"\\n            ],\\n            \"version\": \"==1.6.3\"\\n        },\\n        \"cachetools\": {\\n            \"hashes\": [\\n                \"sha256:513d4ff98dd27f85743a8dc0e92f55ddb1b49e060c2d5961512855cda2c01a98\",\\n                \"sha256:bbaa39c3dede00175df2dc2b03d0cf18dd2d32a7de7beb68072d13043c9edb20\"\\n            ],\\n            \"version\": \"==4.1.1\"\\n        },\\n        \"certifi\": {\\n            \"hashes\": [\\n                \"sha256:5930595817496dd21bb8dc35dad090f1c2cd0adfaf21204bf6732ca5d8ee34d3\",\\n                \"sha256:8fc0819f1f30ba15bdb34cceffb9ef04d99f420f68eb75d901e9560b8749fc41\"\\n            ],\\n            \"version\": \"==2020.6.20\"\\n        },\\n        \"chardet\": {\\n            \"hashes\": [\\n                \"sha256:84ab92ed1c4d4f16916e05906b6b75a6c0fb5db821cc65e70cbd64a3e2a5eaae\",\\n                \"sha256:fc323ffcaeaed0e0a02bf4d117757b98aed530d9ed4531e3e15460124c106691\"\\n            ],\\n            \"version\": \"==3.0.4\"\\n        },\\n        \"gast\": {\\n            \"hashes\": [\\n                \"sha256:8f46f5be57ae6889a4e16e2ca113b1703ef17f2b0abceb83793eaba9e1351a45\",\\n                \"sha256:b881ef288a49aa81440d2c5eb8aeefd4c2bb8993d5f50edae7413a85bfdb3b57\"\\n            ],\\n            \"version\": \"==0.3.3\"\\n        },\\n        \"google-auth\": {\\n            \"hashes\": [\\n                \"sha256:25c97cec5d4f6821f3ab67eb25b264fb00fda8fb9e2f05869bfa93dfcb8b50ee\",\\n                \"sha256:c6e9735a2ee829a75b546702e460489db5cc35567a27fabd70b7c459f11efd58\"\\n            ],\\n            \"version\": \"==1.20.0\"\\n        },\\n        \"google-auth-oauthlib\": {\\n            \"hashes\": [\\n                \"sha256:88d2cd115e3391eb85e1243ac6902e76e77c5fe438b7276b297fbe68015458dd\",\\n                \"sha256:a92a0f6f41a0fb6138454fbc02674e64f89d82a244ea32f98471733c8ef0e0e1\"\\n            ],\\n            \"version\": \"==0.4.1\"\\n        },\\n        \"google-pasta\": {\\n            \"hashes\": [\\n                \"sha256:4612951da876b1a10fe3960d7226f0c7682cf901e16ac06e473b267a5afa8954\",\\n                \"sha256:b32482794a366b5366a32c92a9a9201b107821889935a02b3e51f6b432ea84ed\",\\n                \"sha256:c9f2c8dfc8f96d0d5808299920721be30c9eec37f2389f28904f454565c8a16e\"\\n            ],\\n            \"version\": \"==0.2.0\"\\n        },\\n        \"grpcio\": {\\n            \"hashes\": [\\n                \"sha256:08362b8b09562179b14db6ffce4b88e1a6a6edac8bccb85dd35f7b214fa5a0f5\",\\n                \"sha256:09bea7902adc33620d68462671942e163ab12214073ffb613d2fef3df94254f6\",\\n                \"sha256:0c334d6cbe27ebaa9e7211236dc99f3a9ca2ea4b3bf89b0d2544df2924343cc5\",\\n                \"sha256:0c4e316e02fc227c6fba858707baee46f30d890754fc4acdf2cfec2ea0bf0aa1\",\\n                \"sha256:14743e8fdfdabbab1a2075ffafd25e0a8b1a864505e3cccdf19793766cdc4624\",\\n                \"sha256:1f45ec5003101f16673436b150bac73c2355cd9ae78cb14f3707be01a39b5450\",\\n                \"sha256:2121afee4e3ebea7df1137bfb4dc396b1856aff4c517780108d9ce82f57bf2f8\",\\n                \"sha256:2522f1808fe41bd8807feb5330025378553745b727eacb07562319205d1fd405\",\\n                \"sha256:31e9891ac742e6866aec0cf67f1892618982cfbaf08bdcf3bb2e0f0828530c38\",\\n                \"sha256:32fe6369143c262d096995ebdd55eeb77f0e1dbe8343a956462ef0607527c7bc\",\\n                \"sha256:37da010e209289085d3362f371d9feefc152790859470f5e413d84a95a8d3998\",\\n                \"sha256:38ab75168a9024d393bf43343960da425736038d249920955f223bc762587697\",\\n                \"sha256:3cb78f8078ae583810c2eb47e536b0803a039656685144db43897e8beca4e203\",\\n                \"sha256:474bb992355b4a3cb8d7cb783b2d81f628c16ea921cec54ff492420e11c896f5\",\\n                \"sha256:74e8b6bd0f7ae64a7eecfe9bf10bc7a905d3b3eb2775cd3a9fdcdafd277469dd\",\\n                \"sha256:795f351ef70a931f8f7be6a10a509714ec0a6e36c674a071abe5da8eb6b8bb35\",\\n                \"sha256:7b47ec90cab0827679b511f7f9ef4fb0077cb5d7bb3d7b917154e718bb4d983b\",\\n                \"sha256:7f264d740906655a147448d57e4422723639d2d3f891734b8d5eb1675cb47192\",\\n                \"sha256:872d45a2e01f47db095bec032470a8c5c0a5ebd00fc930b5ae35c756b20d2cff\",\\n                \"sha256:8d3249566b2d8b97925fbb2ae6c5b63c5ebdb919828230eae06a25e9614e051b\",\\n                \"sha256:9ae898c15d122a046f04ea99327e3e0bd10593eb413c4810b931103da6311a21\",\\n                \"sha256:ac97beab4a749c7faf6f267f7b149f6dff4f3ad64f6f6ac1d94d04019785d6a4\",\\n                \"sha256:afe1f9173b51945e66c72002995eb6d4217384aaaee53215ae85d8543251fec2\",\\n                \"sha256:b022cedea66b7d6774bbd7d32d5a8a374947fb572da1a6915210b09a6f51cbdf\",\\n                \"sha256:b0f7bfba0ae7a97b802348aba4e08b1e84988103cc1eb887241e7b069010058a\",\\n                \"sha256:b8e5194fb20f4365eacfc3c33d61662651e12e166978186faf378ee972eb0bab\",\\n                \"sha256:b934542dd61746651f7907d2d7878f62ef42fdb46935088fc6a1d8266a406ba5\",\\n                \"sha256:c8ad75925e87ed68d5f7d5e3ec4b9f2ed209fae67c0abbcbd17481cc474421ba\",\\n                \"sha256:d18e7fb5c5c336cc349d06cde24582e0bfa5e067fdd6268bf1519c4eb4af0199\",\\n                \"sha256:d5eee9d205518ee4feb9c424475ddad18a44fea97ff405780e7cd1d6df8ee96a\",\\n                \"sha256:e8f2f5d16e0164c415f1b31a8d9a81f2e4645a43d1b261375d6bab7b0adf511f\"\\n            ],\\n            \"version\": \"==1.30.0\"\\n        },\\n        \"h5py\": {\\n            \"hashes\": [\\n                \"sha256:063947eaed5f271679ed4ffa36bb96f57bc14f44dd4336a827d9a02702e6ce6b\",\\n                \"sha256:13c87efa24768a5e24e360a40e0bc4c49bcb7ce1bb13a3a7f9902cec302ccd36\",\\n                \"sha256:16ead3c57141101e3296ebeed79c9c143c32bdd0e82a61a2fc67e8e6d493e9d1\",\\n                \"sha256:3dad1730b6470fad853ef56d755d06bb916ee68a3d8272b3bab0c1ddf83bb99e\",\\n                \"sha256:51ae56894c6c93159086ffa2c94b5b3388c0400548ab26555c143e7cfa05b8e5\",\\n                \"sha256:54817b696e87eb9e403e42643305f142cd8b940fe9b3b490bbf98c3b8a894cf4\",\\n                \"sha256:549ad124df27c056b2e255ea1c44d30fb7a17d17676d03096ad5cd85edb32dc1\",\\n                \"sha256:64f74da4a1dd0d2042e7d04cf8294e04ddad686f8eba9bb79e517ae582f6668d\",\\n                \"sha256:6998be619c695910cb0effe5eb15d3a511d3d1a5d217d4bd0bebad1151ec2262\",\\n                \"sha256:6ef7ab1089e3ef53ca099038f3c0a94d03e3560e6aff0e9d6c64c55fb13fc681\",\\n                \"sha256:769e141512b54dee14ec76ed354fcacfc7d97fea5a7646b709f7400cf1838630\",\\n                \"sha256:79b23f47c6524d61f899254f5cd5e486e19868f1823298bc0c29d345c2447172\",\\n                \"sha256:7be5754a159236e95bd196419485343e2b5875e806fe68919e087b6351f40a70\",\\n                \"sha256:84412798925dc870ffd7107f045d7659e60f5d46d1c70c700375248bf6bf512d\",\\n                \"sha256:86868dc07b9cc8cb7627372a2e6636cdc7a53b7e2854ad020c9e9d8a4d3fd0f5\",\\n                \"sha256:8bb1d2de101f39743f91512a9750fb6c351c032e5cd3204b4487383e34da7f75\",\\n                \"sha256:a5f82cd4938ff8761d9760af3274acf55afc3c91c649c50ab18fcff5510a14a5\",\\n                \"sha256:aac4b57097ac29089f179bbc2a6e14102dd210618e94d77ee4831c65f82f17c0\",\\n                \"sha256:bffbc48331b4a801d2f4b7dac8a72609f0b10e6e516e5c480a3e3241e091c878\",\\n                \"sha256:c0d4b04bbf96c47b6d360cd06939e72def512b20a18a8547fa4af810258355d5\",\\n                \"sha256:c54a2c0dd4957776ace7f95879d81582298c5daf89e77fb8bee7378f132951de\",\\n                \"sha256:cbf28ae4b5af0f05aa6e7551cee304f1d317dbed1eb7ac1d827cee2f1ef97a99\",\\n                \"sha256:d35f7a3a6cefec82bfdad2785e78359a0e6a5fbb3f605dd5623ce88082ccd681\",\\n                \"sha256:d3c59549f90a891691991c17f8e58c8544060fdf3ccdea267100fa5f561ff62f\",\\n                \"sha256:d7ae7a0576b06cb8e8a1c265a8bc4b73d05fdee6429bffc9a26a6eb531e79d72\",\\n                \"sha256:ecf4d0b56ee394a0984de15bceeb97cbe1fe485f1ac205121293fc44dcf3f31f\",\\n                \"sha256:f0e25bb91e7a02efccb50aba6591d3fe2c725479e34769802fcdd4076abfa917\",\\n                \"sha256:f23951a53d18398ef1344c186fb04b26163ca6ce449ebd23404b153fd111ded9\",\\n                \"sha256:ff7d241f866b718e4584fa95f520cb19405220c501bd3a53ee11871ba5166ea2\"\\n            ],\\n            \"version\": \"==2.10.0\"\\n        },\\n        \"idna\": {\\n            \"hashes\": [\\n                \"sha256:b307872f855b18632ce0c21c5e45be78c0ea7ae4c15c828c20788b26921eb3f6\",\\n                \"sha256:b97d804b1e9b523befed77c48dacec60e6dcb0b5391d57af6a65a312a90648c0\"\\n            ],\\n            \"version\": \"==2.10\"\\n        },\\n        \"importlib-metadata\": {\\n            \"hashes\": [\\n                \"sha256:90bb658cdbbf6d1735b6341ce708fc7024a3e14e99ffdc5783edea9f9b077f83\",\\n                \"sha256:dc15b2969b4ce36305c51eebe62d418ac7791e9a157911d58bfb1f9ccd8e2070\"\\n            ],\\n            \"markers\": \"python_version < '3.8'\",\\n            \"version\": \"==1.7.0\"\\n        },\\n        \"keras-preprocessing\": {\\n            \"hashes\": [\\n                \"sha256:7b82029b130ff61cc99b55f3bd27427df4838576838c5b2f65940e4fcec99a7b\",\\n                \"sha256:add82567c50c8bc648c14195bf544a5ce7c1f76761536956c3d2978970179ef3\"\\n            ],\\n            \"version\": \"==1.1.2\"\\n        },\\n        \"markdown\": {\\n            \"hashes\": [\\n                \"sha256:1fafe3f1ecabfb514a5285fca634a53c1b32a81cb0feb154264d55bf2ff22c17\",\\n                \"sha256:c467cd6233885534bf0fe96e62e3cf46cfc1605112356c4f9981512b8174de59\"\\n            ],\\n            \"version\": \"==3.2.2\"\\n        },\\n        \"numpy\": {\\n            \"hashes\": [\\n                \"sha256:082f8d4dd69b6b688f64f509b91d482362124986d98dc7dc5f5e9f9b9c3bb983\",\\n                \"sha256:1bc0145999e8cb8aed9d4e65dd8b139adf1919e521177f198529687dbf613065\",\\n                \"sha256:309cbcfaa103fc9a33ec16d2d62569d541b79f828c382556ff072442226d1968\",\\n                \"sha256:3673c8b2b29077f1b7b3a848794f8e11f401ba0b71c49fbd26fb40b71788b132\",\\n                \"sha256:480fdd4dbda4dd6b638d3863da3be82873bba6d32d1fc12ea1b8486ac7b8d129\",\\n                \"sha256:56ef7f56470c24bb67fb43dae442e946a6ce172f97c69f8d067ff8550cf782ff\",\\n                \"sha256:5a936fd51049541d86ccdeef2833cc89a18e4d3808fe58a8abeb802665c5af93\",\\n                \"sha256:5b6885c12784a27e957294b60f97e8b5b4174c7504665333c5e94fbf41ae5d6a\",\\n                \"sha256:667c07063940e934287993366ad5f56766bc009017b4a0fe91dbd07960d0aba7\",\\n                \"sha256:7ed448ff4eaffeb01094959b19cbaf998ecdee9ef9932381420d514e446601cd\",\\n                \"sha256:8343bf67c72e09cfabfab55ad4a43ce3f6bf6e6ced7acf70f45ded9ebb425055\",\\n                \"sha256:92feb989b47f83ebef246adabc7ff3b9a59ac30601c3f6819f8913458610bdcc\",\\n                \"sha256:935c27ae2760c21cd7354402546f6be21d3d0c806fffe967f745d5f2de5005a7\",\\n                \"sha256:aaf42a04b472d12515debc621c31cf16c215e332242e7a9f56403d814c744624\",\\n                \"sha256:b12e639378c741add21fbffd16ba5ad25c0a1a17cf2b6fe4288feeb65144f35b\",\\n                \"sha256:b1cca51512299841bf69add3b75361779962f9cee7d9ee3bb446d5982e925b69\",\\n                \"sha256:b8456987b637232602ceb4d663cb34106f7eb780e247d51a260b84760fd8f491\",\\n                \"sha256:b9792b0ac0130b277536ab8944e7b754c69560dac0415dd4b2dbd16b902c8954\",\\n                \"sha256:c9591886fc9cbe5532d5df85cb8e0cc3b44ba8ce4367bd4cf1b93dc19713da72\",\\n                \"sha256:cf1347450c0b7644ea142712619533553f02ef23f92f781312f6a3553d031fc7\",\\n                \"sha256:de8b4a9b56255797cbddb93281ed92acbc510fb7b15df3f01bd28f46ebc4edae\",\\n                \"sha256:e1b1dc0372f530f26a03578ac75d5e51b3868b9b76cd2facba4c9ee0eb252ab1\",\\n                \"sha256:e45f8e981a0ab47103181773cc0a54e650b2aef8c7b6cd07405d0fa8d869444a\",\\n                \"sha256:e4f6d3c53911a9d103d8ec9518190e52a8b945bab021745af4939cfc7c0d4a9e\",\\n                \"sha256:ed8a311493cf5480a2ebc597d1e177231984c818a86875126cfd004241a73c3e\",\\n                \"sha256:ef71a1d4fd4858596ae80ad1ec76404ad29701f8ca7cdcebc50300178db14dfc\"\\n            ],\\n            \"version\": \"==1.19.1\"\\n        },\\n        \"oauthlib\": {\\n            \"hashes\": [\\n                \"sha256:bee41cc35fcca6e988463cacc3bcb8a96224f470ca547e697b604cc697b2f889\",\\n                \"sha256:df884cd6cbe20e32633f1db1072e9356f53638e4361bef4e8b03c9127c9328ea\"\\n            ],\\n            \"version\": \"==3.1.0\"\\n        },\\n        \"opt-einsum\": {\\n            \"hashes\": [\\n                \"sha256:2455e59e3947d3c275477df7f5205b30635e266fe6dc300e3d9f9646bfcea147\",\\n                \"sha256:59f6475f77bbc37dcf7cd748519c0ec60722e91e63ca114e68821c0c54a46549\"\\n            ],\\n            \"version\": \"==3.3.0\"\\n        },\\n        \"protobuf\": {\\n            \"hashes\": [\\n                \"sha256:0b00429b87821f1e6f3d641327864e6f271763ae61799f7540bc58a352825fe2\",\\n                \"sha256:2636c689a6a2441da9a2ef922a21f9b8bfd5dfe676abd77d788db4b36ea86bee\",\\n                \"sha256:2becd0e238ae34caf96fa7365b87f65b88aebcf7864dfe5ab461c5005f4256d9\",\\n                \"sha256:2db6940c1914fa3fbfabc0e7c8193d9e18b01dbb4650acac249b113be3ba8d9e\",\\n                \"sha256:32f0bcdf85e0040f36b4f548c71177027f2a618cab00ba235197fa9e230b7289\",\\n                \"sha256:3d59825cba9447e8f4fcacc1f3c892cafd28b964e152629b3f420a2fb5918b5a\",\\n                \"sha256:4794a7748ee645d2ae305f3f4f0abd459e789c973b5bc338008960f83e0c554b\",\\n                \"sha256:50b7bb2124f6a1fb0ddc6a44428ae3a21e619ad2cdf08130ac6c00534998ef07\",\\n                \"sha256:6009f3ebe761fad319b52199a49f1efa7a3729302947a78a3f5ea8e7e89e3ac2\",\\n                \"sha256:a7b6cf201e67132ca99b8a6c4812fab541fdce1ceb54bb6f66bc336ab7259138\",\\n                \"sha256:b6842284bb15f1b19c50c5fd496f1e2a4cfefdbdfa5d25c02620cb82793295a7\",\\n                \"sha256:c0c8d7c8f07eacd9e98a907941b56e57883cf83de069cfaeaa7e02c582f72ddb\",\\n                \"sha256:c99e5aea75b6f2b29c8d8da5bdc5f5ed8d9a5b4f15115c8316a3f0a850f94656\",\\n                \"sha256:e2bd5c98952db3f1bb1af2e81b6a208909d3b8a2d32f7525c5cc10a6338b6593\",\\n                \"sha256:e77ca4e1403b363a88bde9e31c11d093565e925e1685f40b29385a52f2320794\",\\n                \"sha256:ef991cbe34d7bb935ba6349406a210d3558b9379c21621c6ed7b99112af7350e\",\\n                \"sha256:f10ba89f9cd508dc00e469918552925ef7cba38d101ca47af1e78f2f9982c6b3\",\\n                \"sha256:f1796e0eb911bf5b08e76b753953effbeb6bc42c95c16597177f627eaa52c375\"\\n            ],\\n            \"version\": \"==3.12.4\"\\n        },\\n        \"pyasn1\": {\\n            \"hashes\": [\\n                \"sha256:39c7e2ec30515947ff4e87fb6f456dfc6e84857d34be479c9d4a4ba4bf46aa5d\",\\n                \"sha256:aef77c9fb94a3ac588e87841208bdec464471d9871bd5050a287cc9a475cd0ba\"\\n            ],\\n            \"version\": \"==0.4.8\"\\n        },\\n        \"pyasn1-modules\": {\\n            \"hashes\": [\\n                \"sha256:905f84c712230b2c592c19470d3ca8d552de726050d1d1716282a1f6146be65e\",\\n                \"sha256:a50b808ffeb97cb3601dd25981f6b016cbb3d31fbf57a8b8a87428e6158d0c74\"\\n            ],\\n            \"version\": \"==0.2.8\"\\n        },\\n        \"requests\": {\\n            \"hashes\": [\\n                \"sha256:b3559a131db72c33ee969480840fff4bb6dd111de7dd27c8ee1f820f4f00231b\",\\n                \"sha256:fe75cc94a9443b9246fc7049224f75604b113c36acb93f87b80ed42c44cbb898\"\\n            ],\\n            \"version\": \"==2.24.0\"\\n        },\\n        \"requests-oauthlib\": {\\n            \"hashes\": [\\n                \"sha256:7f71572defaecd16372f9006f33c2ec8c077c3cfa6f5911a9a90202beb513f3d\",\\n                \"sha256:b4261601a71fd721a8bd6d7aa1cc1d6a8a93b4a9f5e96626f8e4d91e8beeaa6a\"\\n            ],\\n            \"version\": \"==1.3.0\"\\n        },\\n        \"rsa\": {\\n            \"hashes\": [\\n                \"sha256:109ea5a66744dd859bf16fe904b8d8b627adafb9408753161e766a92e7d681fa\",\\n                \"sha256:6166864e23d6b5195a5cfed6cd9fed0fe774e226d8f854fcb23b7bbef0350233\"\\n            ],\\n            \"markers\": \"python_version >= '3.5'\",\\n            \"version\": \"==4.6\"\\n        },\\n        \"scipy\": {\\n            \"hashes\": [\\n                \"sha256:00af72998a46c25bdb5824d2b729e7dabec0c765f9deb0b504f928591f5ff9d4\",\\n                \"sha256:0902a620a381f101e184a958459b36d3ee50f5effd186db76e131cbefcbb96f7\",\\n                \"sha256:1e3190466d669d658233e8a583b854f6386dd62d655539b77b3fa25bfb2abb70\",\\n                \"sha256:2cce3f9847a1a51019e8c5b47620da93950e58ebc611f13e0d11f4980ca5fecb\",\\n                \"sha256:3092857f36b690a321a662fe5496cb816a7f4eecd875e1d36793d92d3f884073\",\\n                \"sha256:386086e2972ed2db17cebf88610aab7d7f6e2c0ca30042dc9a89cf18dcc363fa\",\\n                \"sha256:71eb180f22c49066f25d6df16f8709f215723317cc951d99e54dc88020ea57be\",\\n                \"sha256:770254a280d741dd3436919d47e35712fb081a6ff8bafc0f319382b954b77802\",\\n                \"sha256:787cc50cab3020a865640aba3485e9fbd161d4d3b0d03a967df1a2881320512d\",\\n                \"sha256:8a07760d5c7f3a92e440ad3aedcc98891e915ce857664282ae3c0220f3301eb6\",\\n                \"sha256:8d3bc3993b8e4be7eade6dcc6fd59a412d96d3a33fa42b0fa45dc9e24495ede9\",\\n                \"sha256:9508a7c628a165c2c835f2497837bf6ac80eb25291055f56c129df3c943cbaf8\",\\n                \"sha256:a144811318853a23d32a07bc7fd5561ff0cac5da643d96ed94a4ffe967d89672\",\\n                \"sha256:a1aae70d52d0b074d8121333bc807a485f9f1e6a69742010b33780df2e60cfe0\",\\n                \"sha256:a2d6df9eb074af7f08866598e4ef068a2b310d98f87dc23bd1b90ec7bdcec802\",\\n                \"sha256:bb517872058a1f087c4528e7429b4a44533a902644987e7b2fe35ecc223bc408\",\\n                \"sha256:c5cac0c0387272ee0e789e94a570ac51deb01c796b37fb2aad1fb13f85e2f97d\",\\n                \"sha256:cc971a82ea1170e677443108703a2ec9ff0f70752258d0e9f5433d00dda01f59\",\\n                \"sha256:dba8306f6da99e37ea08c08fef6e274b5bf8567bb094d1dbe86a20e532aca088\",\\n                \"sha256:dc60bb302f48acf6da8ca4444cfa17d52c63c5415302a9ee77b3b21618090521\",\\n                \"sha256:dee1bbf3a6c8f73b6b218cb28eed8dd13347ea2f87d572ce19b289d6fd3fbc59\"\\n            ],\\n            \"markers\": \"python_version >= '3'\",\\n            \"version\": \"==1.4.1\"\\n        },\\n        \"six\": {\\n            \"hashes\": [\\n                \"sha256:30639c035cdb23534cd4aa2dd52c3bf48f06e5f4a941509c8bafd8ce11080259\",\\n                \"sha256:8b74bedcbbbaca38ff6d7491d76f2b06b3592611af620f8426e82dddb04a5ced\"\\n            ],\\n            \"version\": \"==1.15.0\"\\n        },\\n        \"tensorboard\": {\\n            \"hashes\": [\\n                \"sha256:a3feb73e1221c0a512398ad2cd08570fb082d8a2ba364aa0562543ecbd3659ef\"\\n            ],\\n            \"version\": \"==2.2.2\"\\n        },\\n        \"tensorboard-plugin-wit\": {\\n            \"hashes\": [\\n                \"sha256:ee775f04821185c90d9a0e9c56970ee43d7c41403beb6629385b39517129685b\"\\n            ],\\n            \"version\": \"==1.7.0\"\\n        },\\n        \"tensorflow-cpu\": {\\n            \"hashes\": [\\n                \"sha256:1f22ead71bad624e0fe7f6fd657c3394cf2e1dfe6630da4e04b284c8ce6d8645\",\\n                \"sha256:240daf33d9810f39ee69ede03c8b9ca97d47f74b025191f1301bd8c3ec854d23\",\\n                \"sha256:28ac653b094cc23b09787448d5aadd555a456c38bd06fe8e83eda6c90f038cb5\",\\n                \"sha256:2a28cd626192826710681c0daa9169878086dc7631f22227c083a4363274577c\",\\n                \"sha256:3f170ba919e5aac14c52c10802a89b5b5020ec69ede7d085462f8f6eb5df2386\",\\n                \"sha256:692bbdefb6af6eeb978874bc84a13dfc70b9c5147f46f1c8619ac86cfff90821\",\\n                \"sha256:6ab6857a6d15704b04ece8ccb6be0429e7ff9aa6136331731dcef9f294decaaf\",\\n                \"sha256:76cd7ea30779e26afb56c77c61d898750a7a24aa856ec34c37c3f3f4e08a1377\",\\n                \"sha256:85dd69c49a1136f826298b1329cb987881679f21bd72f6f0c967ea49d8f8f549\",\\n                \"sha256:8d1b7c1d45e7f582d8703c0d0a034a60d4bac942b11205bed91fa55981124d60\",\\n                \"sha256:a094939e491c61b775de6e813dbbf801e150565c031de8067a14e43326b88aae\",\\n                \"sha256:e9f419af2ae0e68263fb67cdabe55088ada686762aec8760116864d36b228327\"\\n            ],\\n            \"index\": \"pypi\",\\n            \"version\": \"==2.2.0\"\\n        },\\n        \"tensorflow-estimator\": {\\n            \"hashes\": [\\n                \"sha256:d09dacdd127f2579cea8d5af21f4a918036b8ae246adc82f26b61f91cc247dc2\"\\n            ],\\n            \"version\": \"==2.2.0\"\\n        },\\n        \"termcolor\": {\\n            \"hashes\": [\\n                \"sha256:1d6d69ce66211143803fbc56652b41d73b4a400a2891d7bf7a1cdf4c02de613b\"\\n            ],\\n            \"version\": \"==1.1.0\"\\n        },\\n        \"urllib3\": {\\n            \"hashes\": [\\n                \"sha256:91056c15fa70756691db97756772bb1eb9678fa585d9184f24534b100dc60f4a\",\\n                \"sha256:e7983572181f5e1522d9c98453462384ee92a0be7fac5f1413a1e35c56cc0461\"\\n            ],\\n            \"version\": \"==1.25.10\"\\n        },\\n        \"werkzeug\": {\\n            \"hashes\": [\\n                \"sha256:2de2a5db0baeae7b2d2664949077c2ac63fbd16d98da0ff71837f7d1dea3fd43\",\\n                \"sha256:6c80b1e5ad3665290ea39320b91e1be1e0d5f60652b964a3070216de83d2e47c\"\\n            ],\\n            \"version\": \"==1.0.1\"\\n        },\\n        \"wheel\": {\\n            \"hashes\": [\\n                \"sha256:8788e9155fe14f54164c1b9eb0a319d98ef02c160725587ad60f14ddc57b6f96\",\\n                \"sha256:df277cb51e61359aba502208d680f90c0493adec6f0e848af94948778aed386e\"\\n            ],\\n            \"markers\": \"python_version >= '3'\",\\n            \"version\": \"==0.34.2\"\\n        },\\n        \"wrapt\": {\\n            \"hashes\": [\\n                \"sha256:b62ffa81fb85f4332a4f609cab4ac40709470da05643a082ec1eb88e6d9b97d7\"\\n            ],\\n            \"version\": \"==1.12.1\"\\n        },\\n        \"zipp\": {\\n            \"hashes\": [\\n                \"sha256:aa36550ff0c0b7ef7fa639055d797116ee891440eac1a56f378e2d3179e0320b\",\\n                \"sha256:c599e4d75c98f6798c509911d08a22e6c021d074469042177c8c86fb92eefd96\"\\n            ],\\n            \"version\": \"==3.1.0\"\\n        }\\n    },\\n    \"develop\": {}\\n}" > "/home/amun/Pipfile.lock"
298a134766ea1ec3e98e03ec3eaec34baaaeb9d8933fa5f6a4af8c99c72a47b9
STEP 9: RUN echo -e "\n\\n[global]\n\\ntrusted-host = tensorflow.pypi.thoth-station.ninja\n\\n" > "/etc/pip.conf"
682138bf4f7746ebd346b1e9952cc7d61fce767a0ab89d9d0919b63216a1ae47
STEP 10: RUN cd /home/amun && python3 -m venv venv/ && . venv/bin/activate && micropipenv install --deploy
---------------------------------- Pipfile.lock ----------------------------------
{
    "_meta": {
        "hash": {
            "sha256": "a32090c75d91fc10ba89cb4177ae0b13e246dd2b5540cacca454fe1b3247f4ae"
        },
        "pipfile-spec": 6,
        "requires": {
            "python_version": "3.6"
        },
        "sources": [
            {
                "name": "pypi",
                "url": "https://pypi.org/simple",
                "verify_ssl": true
            }
        ]
    },
    "default": {
        "absl-py": {
            "hashes": [
                "sha256:75e737d6ce7723d9ff9b7aa1ba3233c34be62ef18d5859e706b8fdc828989830"
            ],
            "version": "==0.9.0"
        },
        "astunparse": {
            "hashes": [
                "sha256:5ad93a8456f0d084c3456d059fd9a92cce667963232cbf763eac3bc5b7940872",
                "sha256:c2652417f2c8b5bb325c885ae329bdf3f86424075c4fd1a128674bc6fba4b8e8"
            ],
            "version": "==1.6.3"
        },
        "cachetools": {
            "hashes": [
                "sha256:513d4ff98dd27f85743a8dc0e92f55ddb1b49e060c2d5961512855cda2c01a98",
                "sha256:bbaa39c3dede00175df2dc2b03d0cf18dd2d32a7de7beb68072d13043c9edb20"
            ],
            "version": "==4.1.1"
        },
        "certifi": {
            "hashes": [
                "sha256:5930595817496dd21bb8dc35dad090f1c2cd0adfaf21204bf6732ca5d8ee34d3",
                "sha256:8fc0819f1f30ba15bdb34cceffb9ef04d99f420f68eb75d901e9560b8749fc41"
            ],
            "version": "==2020.6.20"
        },
        "chardet": {
            "hashes": [
                "sha256:84ab92ed1c4d4f16916e05906b6b75a6c0fb5db821cc65e70cbd64a3e2a5eaae",
                "sha256:fc323ffcaeaed0e0a02bf4d117757b98aed530d9ed4531e3e15460124c106691"
            ],
            "version": "==3.0.4"
        },
        "gast": {
            "hashes": [
                "sha256:8f46f5be57ae6889a4e16e2ca113b1703ef17f2b0abceb83793eaba9e1351a45",
                "sha256:b881ef288a49aa81440d2c5eb8aeefd4c2bb8993d5f50edae7413a85bfdb3b57"
            ],
            "version": "==0.3.3"
        },
        "google-auth": {
            "hashes": [
                "sha256:25c97cec5d4f6821f3ab67eb25b264fb00fda8fb9e2f05869bfa93dfcb8b50ee",
                "sha256:c6e9735a2ee829a75b546702e460489db5cc35567a27fabd70b7c459f11efd58"
            ],
            "version": "==1.20.0"
        },
        "google-auth-oauthlib": {
            "hashes": [
                "sha256:88d2cd115e3391eb85e1243ac6902e76e77c5fe438b7276b297fbe68015458dd",
                "sha256:a92a0f6f41a0fb6138454fbc02674e64f89d82a244ea32f98471733c8ef0e0e1"
            ],
            "version": "==0.4.1"
        },
        "google-pasta": {
            "hashes": [
                "sha256:4612951da876b1a10fe3960d7226f0c7682cf901e16ac06e473b267a5afa8954",
                "sha256:b32482794a366b5366a32c92a9a9201b107821889935a02b3e51f6b432ea84ed",
                "sha256:c9f2c8dfc8f96d0d5808299920721be30c9eec37f2389f28904f454565c8a16e"
            ],
            "version": "==0.2.0"
        },
        "grpcio": {
            "hashes": [
                "sha256:08362b8b09562179b14db6ffce4b88e1a6a6edac8bccb85dd35f7b214fa5a0f5",
                "sha256:09bea7902adc33620d68462671942e163ab12214073ffb613d2fef3df94254f6",
                "sha256:0c334d6cbe27ebaa9e7211236dc99f3a9ca2ea4b3bf89b0d2544df2924343cc5",
                "sha256:0c4e316e02fc227c6fba858707baee46f30d890754fc4acdf2cfec2ea0bf0aa1",
                "sha256:14743e8fdfdabbab1a2075ffafd25e0a8b1a864505e3cccdf19793766cdc4624",
                "sha256:1f45ec5003101f16673436b150bac73c2355cd9ae78cb14f3707be01a39b5450",
                "sha256:2121afee4e3ebea7df1137bfb4dc396b1856aff4c517780108d9ce82f57bf2f8",
                "sha256:2522f1808fe41bd8807feb5330025378553745b727eacb07562319205d1fd405",
                "sha256:31e9891ac742e6866aec0cf67f1892618982cfbaf08bdcf3bb2e0f0828530c38",
                "sha256:32fe6369143c262d096995ebdd55eeb77f0e1dbe8343a956462ef0607527c7bc",
                "sha256:37da010e209289085d3362f371d9feefc152790859470f5e413d84a95a8d3998",
                "sha256:38ab75168a9024d393bf43343960da425736038d249920955f223bc762587697",
                "sha256:3cb78f8078ae583810c2eb47e536b0803a039656685144db43897e8beca4e203",
                "sha256:474bb992355b4a3cb8d7cb783b2d81f628c16ea921cec54ff492420e11c896f5",
                "sha256:74e8b6bd0f7ae64a7eecfe9bf10bc7a905d3b3eb2775cd3a9fdcdafd277469dd",
                "sha256:795f351ef70a931f8f7be6a10a509714ec0a6e36c674a071abe5da8eb6b8bb35",
                "sha256:7b47ec90cab0827679b511f7f9ef4fb0077cb5d7bb3d7b917154e718bb4d983b",
                "sha256:7f264d740906655a147448d57e4422723639d2d3f891734b8d5eb1675cb47192",
                "sha256:872d45a2e01f47db095bec032470a8c5c0a5ebd00fc930b5ae35c756b20d2cff",
                "sha256:8d3249566b2d8b97925fbb2ae6c5b63c5ebdb919828230eae06a25e9614e051b",
                "sha256:9ae898c15d122a046f04ea99327e3e0bd10593eb413c4810b931103da6311a21",
                "sha256:ac97beab4a749c7faf6f267f7b149f6dff4f3ad64f6f6ac1d94d04019785d6a4",
                "sha256:afe1f9173b51945e66c72002995eb6d4217384aaaee53215ae85d8543251fec2",
                "sha256:b022cedea66b7d6774bbd7d32d5a8a374947fb572da1a6915210b09a6f51cbdf",
                "sha256:b0f7bfba0ae7a97b802348aba4e08b1e84988103cc1eb887241e7b069010058a",
                "sha256:b8e5194fb20f4365eacfc3c33d61662651e12e166978186faf378ee972eb0bab",
                "sha256:b934542dd61746651f7907d2d7878f62ef42fdb46935088fc6a1d8266a406ba5",
                "sha256:c8ad75925e87ed68d5f7d5e3ec4b9f2ed209fae67c0abbcbd17481cc474421ba",
                "sha256:d18e7fb5c5c336cc349d06cde24582e0bfa5e067fdd6268bf1519c4eb4af0199",
                "sha256:d5eee9d205518ee4feb9c424475ddad18a44fea97ff405780e7cd1d6df8ee96a",
                "sha256:e8f2f5d16e0164c415f1b31a8d9a81f2e4645a43d1b261375d6bab7b0adf511f"
            ],
            "version": "==1.30.0"
        },
        "h5py": {
            "hashes": [
                "sha256:063947eaed5f271679ed4ffa36bb96f57bc14f44dd4336a827d9a02702e6ce6b",
                "sha256:13c87efa24768a5e24e360a40e0bc4c49bcb7ce1bb13a3a7f9902cec302ccd36",
                "sha256:16ead3c57141101e3296ebeed79c9c143c32bdd0e82a61a2fc67e8e6d493e9d1",
                "sha256:3dad1730b6470fad853ef56d755d06bb916ee68a3d8272b3bab0c1ddf83bb99e",
                "sha256:51ae56894c6c93159086ffa2c94b5b3388c0400548ab26555c143e7cfa05b8e5",
                "sha256:54817b696e87eb9e403e42643305f142cd8b940fe9b3b490bbf98c3b8a894cf4",
                "sha256:549ad124df27c056b2e255ea1c44d30fb7a17d17676d03096ad5cd85edb32dc1",
                "sha256:64f74da4a1dd0d2042e7d04cf8294e04ddad686f8eba9bb79e517ae582f6668d",
                "sha256:6998be619c695910cb0effe5eb15d3a511d3d1a5d217d4bd0bebad1151ec2262",
                "sha256:6ef7ab1089e3ef53ca099038f3c0a94d03e3560e6aff0e9d6c64c55fb13fc681",
                "sha256:769e141512b54dee14ec76ed354fcacfc7d97fea5a7646b709f7400cf1838630",
                "sha256:79b23f47c6524d61f899254f5cd5e486e19868f1823298bc0c29d345c2447172",
                "sha256:7be5754a159236e95bd196419485343e2b5875e806fe68919e087b6351f40a70",
                "sha256:84412798925dc870ffd7107f045d7659e60f5d46d1c70c700375248bf6bf512d",
                "sha256:86868dc07b9cc8cb7627372a2e6636cdc7a53b7e2854ad020c9e9d8a4d3fd0f5",
                "sha256:8bb1d2de101f39743f91512a9750fb6c351c032e5cd3204b4487383e34da7f75",
                "sha256:a5f82cd4938ff8761d9760af3274acf55afc3c91c649c50ab18fcff5510a14a5",
                "sha256:aac4b57097ac29089f179bbc2a6e14102dd210618e94d77ee4831c65f82f17c0",
                "sha256:bffbc48331b4a801d2f4b7dac8a72609f0b10e6e516e5c480a3e3241e091c878",
                "sha256:c0d4b04bbf96c47b6d360cd06939e72def512b20a18a8547fa4af810258355d5",
                "sha256:c54a2c0dd4957776ace7f95879d81582298c5daf89e77fb8bee7378f132951de",
                "sha256:cbf28ae4b5af0f05aa6e7551cee304f1d317dbed1eb7ac1d827cee2f1ef97a99",
                "sha256:d35f7a3a6cefec82bfdad2785e78359a0e6a5fbb3f605dd5623ce88082ccd681",
                "sha256:d3c59549f90a891691991c17f8e58c8544060fdf3ccdea267100fa5f561ff62f",
                "sha256:d7ae7a0576b06cb8e8a1c265a8bc4b73d05fdee6429bffc9a26a6eb531e79d72",
                "sha256:ecf4d0b56ee394a0984de15bceeb97cbe1fe485f1ac205121293fc44dcf3f31f",
                "sha256:f0e25bb91e7a02efccb50aba6591d3fe2c725479e34769802fcdd4076abfa917",
                "sha256:f23951a53d18398ef1344c186fb04b26163ca6ce449ebd23404b153fd111ded9",
                "sha256:ff7d241f866b718e4584fa95f520cb19405220c501bd3a53ee11871ba5166ea2"
            ],
            "version": "==2.10.0"
        },
        "idna": {
            "hashes": [
                "sha256:b307872f855b18632ce0c21c5e45be78c0ea7ae4c15c828c20788b26921eb3f6",
                "sha256:b97d804b1e9b523befed77c48dacec60e6dcb0b5391d57af6a65a312a90648c0"
            ],
            "version": "==2.10"
        },
        "importlib-metadata": {
            "hashes": [
                "sha256:90bb658cdbbf6d1735b6341ce708fc7024a3e14e99ffdc5783edea9f9b077f83",
                "sha256:dc15b2969b4ce36305c51eebe62d418ac7791e9a157911d58bfb1f9ccd8e2070"
            ],
            "markers": "python_version < '3.8'",
            "version": "==1.7.0"
        },
        "keras-preprocessing": {
            "hashes": [
                "sha256:7b82029b130ff61cc99b55f3bd27427df4838576838c5b2f65940e4fcec99a7b",
                "sha256:add82567c50c8bc648c14195bf544a5ce7c1f76761536956c3d2978970179ef3"
            ],
            "version": "==1.1.2"
        },
        "markdown": {
            "hashes": [
                "sha256:1fafe3f1ecabfb514a5285fca634a53c1b32a81cb0feb154264d55bf2ff22c17",
                "sha256:c467cd6233885534bf0fe96e62e3cf46cfc1605112356c4f9981512b8174de59"
            ],
            "version": "==3.2.2"
        },
        "numpy": {
            "hashes": [
                "sha256:082f8d4dd69b6b688f64f509b91d482362124986d98dc7dc5f5e9f9b9c3bb983",
                "sha256:1bc0145999e8cb8aed9d4e65dd8b139adf1919e521177f198529687dbf613065",
                "sha256:309cbcfaa103fc9a33ec16d2d62569d541b79f828c382556ff072442226d1968",
                "sha256:3673c8b2b29077f1b7b3a848794f8e11f401ba0b71c49fbd26fb40b71788b132",
                "sha256:480fdd4dbda4dd6b638d3863da3be82873bba6d32d1fc12ea1b8486ac7b8d129",
                "sha256:56ef7f56470c24bb67fb43dae442e946a6ce172f97c69f8d067ff8550cf782ff",
                "sha256:5a936fd51049541d86ccdeef2833cc89a18e4d3808fe58a8abeb802665c5af93",
                "sha256:5b6885c12784a27e957294b60f97e8b5b4174c7504665333c5e94fbf41ae5d6a",
                "sha256:667c07063940e934287993366ad5f56766bc009017b4a0fe91dbd07960d0aba7",
                "sha256:7ed448ff4eaffeb01094959b19cbaf998ecdee9ef9932381420d514e446601cd",
                "sha256:8343bf67c72e09cfabfab55ad4a43ce3f6bf6e6ced7acf70f45ded9ebb425055",
                "sha256:92feb989b47f83ebef246adabc7ff3b9a59ac30601c3f6819f8913458610bdcc",
                "sha256:935c27ae2760c21cd7354402546f6be21d3d0c806fffe967f745d5f2de5005a7",
                "sha256:aaf42a04b472d12515debc621c31cf16c215e332242e7a9f56403d814c744624",
                "sha256:b12e639378c741add21fbffd16ba5ad25c0a1a17cf2b6fe4288feeb65144f35b",
                "sha256:b1cca51512299841bf69add3b75361779962f9cee7d9ee3bb446d5982e925b69",
                "sha256:b8456987b637232602ceb4d663cb34106f7eb780e247d51a260b84760fd8f491",
                "sha256:b9792b0ac0130b277536ab8944e7b754c69560dac0415dd4b2dbd16b902c8954",
                "sha256:c9591886fc9cbe5532d5df85cb8e0cc3b44ba8ce4367bd4cf1b93dc19713da72",
                "sha256:cf1347450c0b7644ea142712619533553f02ef23f92f781312f6a3553d031fc7",
                "sha256:de8b4a9b56255797cbddb93281ed92acbc510fb7b15df3f01bd28f46ebc4edae",
                "sha256:e1b1dc0372f530f26a03578ac75d5e51b3868b9b76cd2facba4c9ee0eb252ab1",
                "sha256:e45f8e981a0ab47103181773cc0a54e650b2aef8c7b6cd07405d0fa8d869444a",
                "sha256:e4f6d3c53911a9d103d8ec9518190e52a8b945bab021745af4939cfc7c0d4a9e",
                "sha256:ed8a311493cf5480a2ebc597d1e177231984c818a86875126cfd004241a73c3e",
                "sha256:ef71a1d4fd4858596ae80ad1ec76404ad29701f8ca7cdcebc50300178db14dfc"
            ],
            "version": "==1.19.1"
        },
        "oauthlib": {
            "hashes": [
                "sha256:bee41cc35fcca6e988463cacc3bcb8a96224f470ca547e697b604cc697b2f889",
                "sha256:df884cd6cbe20e32633f1db1072e9356f53638e4361bef4e8b03c9127c9328ea"
            ],
            "version": "==3.1.0"
        },
        "opt-einsum": {
            "hashes": [
                "sha256:2455e59e3947d3c275477df7f5205b30635e266fe6dc300e3d9f9646bfcea147",
                "sha256:59f6475f77bbc37dcf7cd748519c0ec60722e91e63ca114e68821c0c54a46549"
            ],
            "version": "==3.3.0"
        },
        "protobuf": {
            "hashes": [
                "sha256:0b00429b87821f1e6f3d641327864e6f271763ae61799f7540bc58a352825fe2",
                "sha256:2636c689a6a2441da9a2ef922a21f9b8bfd5dfe676abd77d788db4b36ea86bee",
                "sha256:2becd0e238ae34caf96fa7365b87f65b88aebcf7864dfe5ab461c5005f4256d9",
                "sha256:2db6940c1914fa3fbfabc0e7c8193d9e18b01dbb4650acac249b113be3ba8d9e",
                "sha256:32f0bcdf85e0040f36b4f548c71177027f2a618cab00ba235197fa9e230b7289",
                "sha256:3d59825cba9447e8f4fcacc1f3c892cafd28b964e152629b3f420a2fb5918b5a",
                "sha256:4794a7748ee645d2ae305f3f4f0abd459e789c973b5bc338008960f83e0c554b",
                "sha256:50b7bb2124f6a1fb0ddc6a44428ae3a21e619ad2cdf08130ac6c00534998ef07",
                "sha256:6009f3ebe761fad319b52199a49f1efa7a3729302947a78a3f5ea8e7e89e3ac2",
                "sha256:a7b6cf201e67132ca99b8a6c4812fab541fdce1ceb54bb6f66bc336ab7259138",
                "sha256:b6842284bb15f1b19c50c5fd496f1e2a4cfefdbdfa5d25c02620cb82793295a7",
                "sha256:c0c8d7c8f07eacd9e98a907941b56e57883cf83de069cfaeaa7e02c582f72ddb",
                "sha256:c99e5aea75b6f2b29c8d8da5bdc5f5ed8d9a5b4f15115c8316a3f0a850f94656",
                "sha256:e2bd5c98952db3f1bb1af2e81b6a208909d3b8a2d32f7525c5cc10a6338b6593",
                "sha256:e77ca4e1403b363a88bde9e31c11d093565e925e1685f40b29385a52f2320794",
                "sha256:ef991cbe34d7bb935ba6349406a210d3558b9379c21621c6ed7b99112af7350e",
                "sha256:f10ba89f9cd508dc00e469918552925ef7cba38d101ca47af1e78f2f9982c6b3",
                "sha256:f1796e0eb911bf5b08e76b753953effbeb6bc42c95c16597177f627eaa52c375"
            ],
            "version": "==3.12.4"
        },
        "pyasn1": {
            "hashes": [
                "sha256:39c7e2ec30515947ff4e87fb6f456dfc6e84857d34be479c9d4a4ba4bf46aa5d",
                "sha256:aef77c9fb94a3ac588e87841208bdec464471d9871bd5050a287cc9a475cd0ba"
            ],
            "version": "==0.4.8"
        },
        "pyasn1-modules": {
            "hashes": [
                "sha256:905f84c712230b2c592c19470d3ca8d552de726050d1d1716282a1f6146be65e",
                "sha256:a50b808ffeb97cb3601dd25981f6b016cbb3d31fbf57a8b8a87428e6158d0c74"
            ],
            "version": "==0.2.8"
        },
        "requests": {
            "hashes": [
                "sha256:b3559a131db72c33ee969480840fff4bb6dd111de7dd27c8ee1f820f4f00231b",
                "sha256:fe75cc94a9443b9246fc7049224f75604b113c36acb93f87b80ed42c44cbb898"
            ],
            "version": "==2.24.0"
        },
        "requests-oauthlib": {
            "hashes": [
                "sha256:7f71572defaecd16372f9006f33c2ec8c077c3cfa6f5911a9a90202beb513f3d",
                "sha256:b4261601a71fd721a8bd6d7aa1cc1d6a8a93b4a9f5e96626f8e4d91e8beeaa6a"
            ],
            "version": "==1.3.0"
        },
        "rsa": {
            "hashes": [
                "sha256:109ea5a66744dd859bf16fe904b8d8b627adafb9408753161e766a92e7d681fa",
                "sha256:6166864e23d6b5195a5cfed6cd9fed0fe774e226d8f854fcb23b7bbef0350233"
            ],
            "markers": "python_version >= '3.5'",
            "version": "==4.6"
        },
        "scipy": {
            "hashes": [
                "sha256:00af72998a46c25bdb5824d2b729e7dabec0c765f9deb0b504f928591f5ff9d4",
                "sha256:0902a620a381f101e184a958459b36d3ee50f5effd186db76e131cbefcbb96f7",
                "sha256:1e3190466d669d658233e8a583b854f6386dd62d655539b77b3fa25bfb2abb70",
                "sha256:2cce3f9847a1a51019e8c5b47620da93950e58ebc611f13e0d11f4980ca5fecb",
                "sha256:3092857f36b690a321a662fe5496cb816a7f4eecd875e1d36793d92d3f884073",
                "sha256:386086e2972ed2db17cebf88610aab7d7f6e2c0ca30042dc9a89cf18dcc363fa",
                "sha256:71eb180f22c49066f25d6df16f8709f215723317cc951d99e54dc88020ea57be",
                "sha256:770254a280d741dd3436919d47e35712fb081a6ff8bafc0f319382b954b77802",
                "sha256:787cc50cab3020a865640aba3485e9fbd161d4d3b0d03a967df1a2881320512d",
                "sha256:8a07760d5c7f3a92e440ad3aedcc98891e915ce857664282ae3c0220f3301eb6",
                "sha256:8d3bc3993b8e4be7eade6dcc6fd59a412d96d3a33fa42b0fa45dc9e24495ede9",
                "sha256:9508a7c628a165c2c835f2497837bf6ac80eb25291055f56c129df3c943cbaf8",
                "sha256:a144811318853a23d32a07bc7fd5561ff0cac5da643d96ed94a4ffe967d89672",
                "sha256:a1aae70d52d0b074d8121333bc807a485f9f1e6a69742010b33780df2e60cfe0",
                "sha256:a2d6df9eb074af7f08866598e4ef068a2b310d98f87dc23bd1b90ec7bdcec802",
                "sha256:bb517872058a1f087c4528e7429b4a44533a902644987e7b2fe35ecc223bc408",
                "sha256:c5cac0c0387272ee0e789e94a570ac51deb01c796b37fb2aad1fb13f85e2f97d",
                "sha256:cc971a82ea1170e677443108703a2ec9ff0f70752258d0e9f5433d00dda01f59",
                "sha256:dba8306f6da99e37ea08c08fef6e274b5bf8567bb094d1dbe86a20e532aca088",
                "sha256:dc60bb302f48acf6da8ca4444cfa17d52c63c5415302a9ee77b3b21618090521",
                "sha256:dee1bbf3a6c8f73b6b218cb28eed8dd13347ea2f87d572ce19b289d6fd3fbc59"
            ],
            "markers": "python_version >= '3'",
            "version": "==1.4.1"
        },
        "six": {
            "hashes": [
                "sha256:30639c035cdb23534cd4aa2dd52c3bf48f06e5f4a941509c8bafd8ce11080259",
                "sha256:8b74bedcbbbaca38ff6d7491d76f2b06b3592611af620f8426e82dddb04a5ced"
            ],
            "version": "==1.15.0"
        },
        "tensorboard": {
            "hashes": [
                "sha256:a3feb73e1221c0a512398ad2cd08570fb082d8a2ba364aa0562543ecbd3659ef"
            ],
            "version": "==2.2.2"
        },
        "tensorboard-plugin-wit": {
            "hashes": [
                "sha256:ee775f04821185c90d9a0e9c56970ee43d7c41403beb6629385b39517129685b"
            ],
            "version": "==1.7.0"
        },
        "tensorflow-cpu": {
            "hashes": [
                "sha256:1f22ead71bad624e0fe7f6fd657c3394cf2e1dfe6630da4e04b284c8ce6d8645",
                "sha256:240daf33d9810f39ee69ede03c8b9ca97d47f74b025191f1301bd8c3ec854d23",
                "sha256:28ac653b094cc23b09787448d5aadd555a456c38bd06fe8e83eda6c90f038cb5",
                "sha256:2a28cd626192826710681c0daa9169878086dc7631f22227c083a4363274577c",
                "sha256:3f170ba919e5aac14c52c10802a89b5b5020ec69ede7d085462f8f6eb5df2386",
                "sha256:692bbdefb6af6eeb978874bc84a13dfc70b9c5147f46f1c8619ac86cfff90821",
                "sha256:6ab6857a6d15704b04ece8ccb6be0429e7ff9aa6136331731dcef9f294decaaf",
                "sha256:76cd7ea30779e26afb56c77c61d898750a7a24aa856ec34c37c3f3f4e08a1377",
                "sha256:85dd69c49a1136f826298b1329cb987881679f21bd72f6f0c967ea49d8f8f549",
                "sha256:8d1b7c1d45e7f582d8703c0d0a034a60d4bac942b11205bed91fa55981124d60",
                "sha256:a094939e491c61b775de6e813dbbf801e150565c031de8067a14e43326b88aae",
                "sha256:e9f419af2ae0e68263fb67cdabe55088ada686762aec8760116864d36b228327"
            ],
            "index": "pypi",
            "version": "==2.2.0"
        },
        "tensorflow-estimator": {
            "hashes": [
                "sha256:d09dacdd127f2579cea8d5af21f4a918036b8ae246adc82f26b61f91cc247dc2"
            ],
            "version": "==2.2.0"
        },
        "termcolor": {
            "hashes": [
                "sha256:1d6d69ce66211143803fbc56652b41d73b4a400a2891d7bf7a1cdf4c02de613b"
            ],
            "version": "==1.1.0"
        },
        "urllib3": {
            "hashes": [
                "sha256:91056c15fa70756691db97756772bb1eb9678fa585d9184f24534b100dc60f4a",
                "sha256:e7983572181f5e1522d9c98453462384ee92a0be7fac5f1413a1e35c56cc0461"
            ],
            "version": "==1.25.10"
        },
        "werkzeug": {
            "hashes": [
                "sha256:2de2a5db0baeae7b2d2664949077c2ac63fbd16d98da0ff71837f7d1dea3fd43",
                "sha256:6c80b1e5ad3665290ea39320b91e1be1e0d5f60652b964a3070216de83d2e47c"
            ],
            "version": "==1.0.1"
        },
        "wheel": {
            "hashes": [
                "sha256:8788e9155fe14f54164c1b9eb0a319d98ef02c160725587ad60f14ddc57b6f96",
                "sha256:df277cb51e61359aba502208d680f90c0493adec6f0e848af94948778aed386e"
            ],
            "markers": "python_version >= '3'",
            "version": "==0.34.2"
        },
        "wrapt": {
            "hashes": [
                "sha256:b62ffa81fb85f4332a4f609cab4ac40709470da05643a082ec1eb88e6d9b97d7"
            ],
            "version": "==1.12.1"
        },
        "zipp": {
            "hashes": [
                "sha256:aa36550ff0c0b7ef7fa639055d797116ee891440eac1a56f378e2d3179e0320b",
                "sha256:c599e4d75c98f6798c509911d08a22e6c021d074469042177c8c86fb92eefd96"
            ],
            "version": "==3.1.0"
        }
    },
    "develop": {}
}
---------------------------------- Pipfile.lock ----------------------------------
Collecting absl-py==0.9.0
  Downloading absl-py-0.9.0.tar.gz (104 kB)
Building wheels for collected packages: absl-py
  Building wheel for absl-py (setup.py): started
  Building wheel for absl-py (setup.py): finished with status 'done'
  Created wheel for absl-py: filename=absl_py-0.9.0-py3-none-any.whl size=117798 sha256=bbc89733f64117824633e506673c3c09c82517f5b974b360b779a797e76ae8c4
  Stored in directory: /tmp/pip-ephem-wheel-cache-c4wimu0e/wheels/c3/af/84/3962a6af7b4ab336e951b7877dcfb758cf94548bb1771e0679
Successfully built absl-py
Installing collected packages: absl-py
Successfully installed absl-py-0.9.0
Collecting astunparse==1.6.3
  Downloading astunparse-1.6.3-py2.py3-none-any.whl (12 kB)
Installing collected packages: astunparse
Successfully installed astunparse-1.6.3
Collecting cachetools==4.1.1
  Downloading cachetools-4.1.1-py3-none-any.whl (10 kB)
Installing collected packages: cachetools
Successfully installed cachetools-4.1.1
Collecting certifi==2020.6.20
  Downloading certifi-2020.6.20-py2.py3-none-any.whl (156 kB)
Installing collected packages: certifi
Successfully installed certifi-2020.6.20
Collecting chardet==3.0.4
  Downloading chardet-3.0.4-py2.py3-none-any.whl (133 kB)
Installing collected packages: chardet
Successfully installed chardet-3.0.4
Collecting gast==0.3.3
  Downloading gast-0.3.3-py2.py3-none-any.whl (9.7 kB)
Installing collected packages: gast
Successfully installed gast-0.3.3
Collecting google-auth==1.20.0
  Downloading google_auth-1.20.0-py2.py3-none-any.whl (91 kB)
Installing collected packages: google-auth
Successfully installed google-auth-1.20.0
Collecting google-auth-oauthlib==0.4.1
  Downloading google_auth_oauthlib-0.4.1-py2.py3-none-any.whl (18 kB)
Installing collected packages: google-auth-oauthlib
Successfully installed google-auth-oauthlib-0.4.1
Collecting google-pasta==0.2.0
  Downloading google_pasta-0.2.0-py3-none-any.whl (57 kB)
Installing collected packages: google-pasta
Successfully installed google-pasta-0.2.0
Collecting grpcio==1.30.0
  Downloading grpcio-1.30.0-cp36-cp36m-manylinux2010_x86_64.whl (3.0 MB)
Installing collected packages: grpcio
Successfully installed grpcio-1.30.0
Collecting h5py==2.10.0
  Downloading h5py-2.10.0-cp36-cp36m-manylinux1_x86_64.whl (2.9 MB)
Installing collected packages: h5py
Successfully installed h5py-2.10.0
Collecting idna==2.10
  Downloading idna-2.10-py2.py3-none-any.whl (58 kB)
Installing collected packages: idna
Successfully installed idna-2.10
Collecting importlib-metadata==1.7.0
  Downloading importlib_metadata-1.7.0-py2.py3-none-any.whl (31 kB)
Installing collected packages: importlib-metadata
Successfully installed importlib-metadata-1.7.0
Collecting keras-preprocessing==1.1.2
  Downloading Keras_Preprocessing-1.1.2-py2.py3-none-any.whl (42 kB)
Installing collected packages: keras-preprocessing
Successfully installed keras-preprocessing-1.1.2
Collecting markdown==3.2.2
  Downloading Markdown-3.2.2-py3-none-any.whl (88 kB)
Installing collected packages: markdown
Successfully installed markdown-3.2.2
Collecting numpy==1.19.1
  Downloading numpy-1.19.1-cp36-cp36m-manylinux2010_x86_64.whl (14.5 MB)
Installing collected packages: numpy
Successfully installed numpy-1.19.1
Collecting oauthlib==3.1.0
  Downloading oauthlib-3.1.0-py2.py3-none-any.whl (147 kB)
Installing collected packages: oauthlib
Successfully installed oauthlib-3.1.0
Collecting opt-einsum==3.3.0
  Downloading opt_einsum-3.3.0-py3-none-any.whl (65 kB)
Installing collected packages: opt-einsum
Successfully installed opt-einsum-3.3.0
Collecting protobuf==3.12.4
  Downloading protobuf-3.12.4-cp36-cp36m-manylinux1_x86_64.whl (1.3 MB)
Installing collected packages: protobuf
Successfully installed protobuf-3.12.4
Collecting pyasn1==0.4.8
  Downloading pyasn1-0.4.8-py2.py3-none-any.whl (77 kB)
Installing collected packages: pyasn1
Successfully installed pyasn1-0.4.8
Collecting pyasn1-modules==0.2.8
  Downloading pyasn1_modules-0.2.8-py2.py3-none-any.whl (155 kB)
Installing collected packages: pyasn1-modules
Successfully installed pyasn1-modules-0.2.8
Collecting requests==2.24.0
  Downloading requests-2.24.0-py2.py3-none-any.whl (61 kB)
Installing collected packages: requests
Successfully installed requests-2.24.0
Collecting requests-oauthlib==1.3.0
  Downloading requests_oauthlib-1.3.0-py2.py3-none-any.whl (23 kB)
Installing collected packages: requests-oauthlib
Successfully installed requests-oauthlib-1.3.0
Collecting rsa==4.6
  Downloading rsa-4.6-py3-none-any.whl (47 kB)
Installing collected packages: rsa
Successfully installed rsa-4.6
Collecting scipy==1.4.1
  Downloading scipy-1.4.1-cp36-cp36m-manylinux1_x86_64.whl (26.1 MB)
Installing collected packages: scipy
Successfully installed scipy-1.4.1
Collecting six==1.15.0
  Downloading six-1.15.0-py2.py3-none-any.whl (10 kB)
Installing collected packages: six
Successfully installed six-1.15.0
Collecting tensorboard==2.2.2
  Downloading tensorboard-2.2.2-py3-none-any.whl (3.0 MB)
Installing collected packages: tensorboard
Successfully installed tensorboard-2.2.2
Collecting tensorboard-plugin-wit==1.7.0
  Downloading tensorboard_plugin_wit-1.7.0-py3-none-any.whl (779 kB)
Installing collected packages: tensorboard-plugin-wit
Successfully installed tensorboard-plugin-wit-1.7.0
Collecting tensorflow-cpu==2.2.0
  Downloading tensorflow_cpu-2.2.0-cp36-cp36m-manylinux2010_x86_64.whl (144.4 MB)
Installing collected packages: tensorflow-cpu
Successfully installed tensorflow-cpu-2.2.0
Collecting tensorflow-estimator==2.2.0
  Downloading tensorflow_estimator-2.2.0-py2.py3-none-any.whl (454 kB)
Installing collected packages: tensorflow-estimator
Successfully installed tensorflow-estimator-2.2.0
Collecting termcolor==1.1.0
  Downloading termcolor-1.1.0.tar.gz (3.9 kB)
Building wheels for collected packages: termcolor
  Building wheel for termcolor (setup.py): started
  Building wheel for termcolor (setup.py): finished with status 'done'
  Created wheel for termcolor: filename=termcolor-1.1.0-py3-none-any.whl size=4001 sha256=c032a37a714e8eaf0870efd33503374179c3976c791f1a60349dbcc31cfc25b9
  Stored in directory: /tmp/pip-ephem-wheel-cache-t558gsdj/wheels/93/2a/eb/e58dbcbc963549ee4f065ff80a59f274cc7210b6eab962acdc
Successfully built termcolor
Installing collected packages: termcolor
Successfully installed termcolor-1.1.0
Collecting urllib3==1.25.10
  Downloading urllib3-1.25.10-py2.py3-none-any.whl (127 kB)
Installing collected packages: urllib3
Successfully installed urllib3-1.25.10
Collecting werkzeug==1.0.1
  Downloading Werkzeug-1.0.1-py2.py3-none-any.whl (298 kB)
Installing collected packages: werkzeug
Successfully installed werkzeug-1.0.1
Collecting wheel==0.34.2
  Downloading wheel-0.34.2-py2.py3-none-any.whl (26 kB)
Installing collected packages: wheel
  Attempting uninstall: wheel
    Found existing installation: wheel 0.31.1
    Uninstalling wheel-0.31.1:
      Successfully uninstalled wheel-0.31.1
Successfully installed wheel-0.34.2
Collecting wrapt==1.12.1
  Downloading wrapt-1.12.1.tar.gz (27 kB)
Building wheels for collected packages: wrapt
  Building wheel for wrapt (setup.py): started
  Building wheel for wrapt (setup.py): finished with status 'done'
  Created wheel for wrapt: filename=wrapt-1.12.1-cp36-cp36m-linux_x86_64.whl size=72987 sha256=80aaa784cec5cfe99f5f89e75fcf0616de1dae50bf602722eb40e7ae938a4978
  Stored in directory: /tmp/pip-ephem-wheel-cache-xiex7jc1/wheels/32/42/7f/23cae9ff6ef66798d00dc5d659088e57dbba01566f6c60db63
Successfully built wrapt
Installing collected packages: wrapt
Successfully installed wrapt-1.12.1
Collecting zipp==3.1.0
  Downloading zipp-3.1.0-py3-none-any.whl (4.9 kB)
Installing collected packages: zipp
Successfully installed zipp-3.1.0
cc874e65ccdccb96525174f4eef6d9bd15774aed6a82395f227ac3d164704cc0
STEP 11: RUN echo -e "#!/usr/bin/env python3\\n\\n# Copyright 2018 Jason Zaman <jason AT perfinion.com> 2018\\n# Licensed under Apache-2\\n#\\n# Additional changes for project Thoth by Thoth team.\\n#\\n\\nimport logging\\nimport os\\nimport sys\\nimport numpy as np\\nimport json\\nimport tensorflow as tf\\nfrom timeit import time\\n\\n_LOGGER = logging.getLogger(__name__)\\n\\n\\n# Datatype used.\\n# Options:\\n#   float16\\n#   float32\\n#   float64\\n#   int32\\n_ARGS_DTYPE = os.getenv('MATMUL_DTYPE', 'float32')\\nif _ARGS_DTYPE not in ('float16', 'float32', 'float64', 'int32'):\\n    raise ValueError(\"Unknown MATMUL_DTYPE\")\\nprint(\"DTYPE set to %s\" % _ARGS_DTYPE, file=sys.stderr)\\n\\n# Run on CPU or GPU.\\n# Options:\\n#   cpu\\n#   gpu\\n_ARGS_DEVICE = os.getenv('MATMUL_DEVICE', 'cpu')\\nprint(\"DEVICE set to %s\" % _ARGS_DEVICE, file=sys.stderr)\\n\\n# Number of repetitions.\\n# Options:\\n#   A positive integer.\\n_ARGS_REPS = int(os.getenv('MATMUL_REPS', 2000))\\nprint(\"REPS set to %s\" % _ARGS_REPS, file=sys.stderr)\\n\\n# Size of matrix.\\n# Options:\\n#   A positive integer.\\n_ARGS_MATRIX_SIZE = int(os.getenv('MATMUL_MATRIX_SIZE', 512))\\nprint(\"MATRIX size set to %s\" % _ARGS_MATRIX_SIZE, file=sys.stderr)\\n\\nos.environ['TF_CPP_MIN_LOG_LEVEL'] = '3'\\nif _ARGS_DEVICE == 'cpu':\\n    os.environ['CUDA_VISIBLE_DEVICES'] = '-1'\\n\\n\\ndef _get_aicoe_tensorflow_build_info():\\n    \"\"\"Try to obtain information of AICoE TensorFlow builds.\\n\\n    Do whatever is needed in this function, if there is an error, the reported build information is\\n    set to None (e.g. AICoE TensorFlow is not installed and such).\\n    \"\"\"\\n    try:\\n        path = os.path.dirname(os.path.dirname(tf.__file__))\\n        build_info_path = os.path.join(path, 'tensorflow-' + tf.__version__ + '.dist-info', 'build_info.json')\\n        with open(build_info_path, 'r') as build_info_file:\\n            build_info = json.load(build_info_file)\\n        return build_info\\n    except Exception:\\n        _LOGGER.exception(\"Failed to obtain AICoE specific build information for TensorFlow\")\\n\\n    return None\\n\\n\\ndef _get_tensorflow_build_info():\\n    \"\"\"Get tensorflow build info provided by tensorflow 2.3 and above.\"\"\"\\n    try:\\n        return tf.sysconfig.get_build_info()\\n    except AttributeError:\\n        return None\\n\\n\\ndef bench_v1(n: int):\\n    times = []\\n    tf.reset_default_graph()\\n    with tf.device(\"/%s:0\" % (_ARGS_DEVICE)):\\n        matrix1 = tf.Variable(tf.ones((n, n), dtype=_ARGS_DTYPE))\\n        matrix2 = tf.Variable(tf.ones((n, n), dtype=_ARGS_DTYPE))\\n        product = tf.matmul(matrix1, matrix2)\\n\\n    config = tf.ConfigProto()\\n    with tf.Session(config=config) as sess:\\n        sess.run(tf.global_variables_initializer())\\n        # warmup\\n        sess.run(product.op)\\n\\n        for i in range(_ARGS_REPS):\\n            start = time.monotonic()\\n            sess.run(product.op)\\n            times.append(time.monotonic() - start)\\n\\n    times_ms = 1000 * np.array(times)  # in seconds, convert to ms\\n    elapsed_ms = np.median(times_ms)\\n\\n    ops = n ** 3 + (n - 1) * n ** 2  # n^2*(n-1) additions, n^3 multiplications\\n    rate = ops / elapsed_ms / 10 ** 6  # in GFLOPS. (/ milli / 10**6) == (/ 10 ** 9)\\n    print('%d x %d matmul took:   \\t%.4f ms,\\t %.2f GFLOPS' % (n, n, elapsed_ms, rate,), file=sys.stderr)\\n    return rate, elapsed_ms\\n\\n\\ndef bench_v2(n: int):\\n    times = []\\n    with tf.device(\"/%s:0\" % (_ARGS_DEVICE)):\\n        matrix1 = tf.Variable(tf.ones((n, n), dtype=_ARGS_DTYPE))\\n        matrix2 = tf.Variable(tf.ones((n, n), dtype=_ARGS_DTYPE))\\n\\n        for i in range(_ARGS_REPS):\\n            start = time.monotonic()\\n            product = tf.matmul(matrix1, matrix2)\\n            times.append(time.monotonic() - start)\\n\\n    times_ms = 1000 * np.array(times)  # in seconds, convert to ms\\n    elapsed_ms = np.median(times_ms)\\n\\n    ops = n ** 3 + (n - 1) * n ** 2  # n^2*(n-1) additions, n^3 multiplications\\n    rate = ops / elapsed_ms / 10 ** 6  # in GFLOPS. (/ milli / 10**6) == (/ 10 ** 9)\\n    print('%d x %d matmul took:   \\t%.4f ms,\\t %.2f GFLOPS' % (n, n, elapsed_ms, rate,), file=sys.stderr)\\n    return rate, elapsed_ms\\n\\n\\ndef main():\\n    np.set_printoptions(suppress=True)\\n    tf_version = tf.__version__\\n    print(\"# Version: %s, path: %s\" % (tf_version, tf.__path__), file=sys.stderr)\\n\\n    if int(tf_version[0]) >= 2:\\n        rate, elapsed = bench_v2(_ARGS_MATRIX_SIZE)\\n    else:\\n        rate, elapsed = bench_v1(_ARGS_MATRIX_SIZE)\\n\\n    result = {\\n        \"component\": \"tensorflow\",\\n        \"name\": \"PiMatmul\",\\n        \"@parameters\": {\\n            \"dtype\": _ARGS_DTYPE,\\n            \"device\": _ARGS_DEVICE,\\n            \"reps\": _ARGS_REPS,\\n            \"matrix_size\": _ARGS_MATRIX_SIZE,\\n        },\\n        \"@result\": {\\n            \"rate\": rate,\\n            \"elapsed\": elapsed,\\n        },\\n        \"tensorflow_aicoe_buildinfo\": _get_aicoe_tensorflow_build_info(),\\n        \"tensorflow_upstream_buildinfo\": _get_tensorflow_build_info(),\\n    }\\n    json.dump(result, sys.stdout, indent=2)\\n\\n\\nif __name__ == '__main__':\\n    main()\\n" > "/home/amun/script"
c0f7f688d1e7aef72fe6035058da164cba186f66483a3889f0063026fa4c45a2
STEP 12: RUN echo -e "#!/usr/bin/env python3\n\\n# Amun\n\\n# Copyright(C) 2018, 2019, 2020 Fridolin Pokorny\n\\n#\n\\n# This program is free software: you can redistribute it and / or modify\n\\n# it under the terms of the GNU General Public License as published by\n\\n# the Free Software Foundation, either version 3 of the License, or\n\\n# (at your option) any later version.\n\\n#\n\\n# This program is distributed in the hope that it will be useful,\n\\n# but WITHOUT ANY WARRANTY without even the implied warranty of\n\\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\\n# GNU General Public License for more details.\n\\n#\n\\n# You should have received a copy of the GNU General Public License\n\\n# along with this program. If not, see <http://www.gnu.org/licenses/>.\n\\n\n\\n\"\"\"This file is run by an inspection pod to gather runtime information.\n\\n\n\\nThis script should not use any external libraries except for Python's standard\n\\nlibrary. It acts as wrapper around user supplied script and prints command\n\\nresults to stdout as a JSON. It also aggregates information from hwinfo\n\\ninit-container aggregating hardware information.\n\\n\"\"\"\n\\n\n\\nimport os\n\\nimport resource\n\\nimport json\n\\nimport subprocess\n\\nimport hashlib\n\\nimport sys\n\\nfrom datetime import datetime\n\\nimport platform\n\\n\n\\n\n\\n# A path to file containing hardware information as gathered by init-container\n\\n# amun-hwinfo.\n\\n_HWINFO_FILE = os.getenv(\"THOTH_AMUN_HWINFO_PATH\", \"/home/amun/hwinfo/info.json\")\n\\n# We use a file for stdout and stderr not to block on pipe.\n\\n_EXEC_STDOUT_FILE = os.getenv(\"THOTH_AMUN_STDOUT_PATH\", \"/home/amun/script.stdout\")\n\\n_EXEC_STDERR_FILE = os.getenv(\"THOTH_AMUN_STDERR_PATH\", \"/home/amun/script.stderr\")\n\\n# Executable to be run.\n\\n_EXEC_DIR = os.getenv(\"THOTH_AMUN_EXEC_DIR\", \"/home/amun\")\n\\n_EXEC_FILE = os.getenv(\"THOTH_AMUN_EXEC_FILE\", os.path.join(_EXEC_DIR, \"script\"))\n\\n_ETC_OS_RELEASE = \"/etc/os-release\"\n\\n# Names of items on certain position in return value of resource.getrusage()\n\\n#   https://docs.python.org/3.6/library/resource.html#resource.getrusage\n\\n_RESOURCE_STRUCT_RUSAGE_ITEMS = (\n\\n    \"ru_utime\",\n\\n    \"ru_stime\",\n\\n    \"ru_maxrss\",\n\\n    \"ru_ixrss\",\n\\n    \"ru_idrss\",\n\\n    \"ru_isrss\",\n\\n    \"ru_minflt\",\n\\n    \"ru_majflt\",\n\\n    \"ru_nswap\",\n\\n    \"ru_inblock\",\n\\n    \"ru_oublock\",\n\\n    \"ru_msgsnd\",\n\\n    \"ru_msgrcv\",\n\\n    \"ru_nsignals\",\n\\n    \"ru_nvcsw\",\n\\n    \"ru_nivcsw\",\n\\n)\n\\n\n\\n\n\\ndef _gather_os_release():\n\\n    \"\"\"Gather information about operating system used.\"\"\"\n\\n    if not os.path.isfile(_ETC_OS_RELEASE):\n\\n        return None\n\\n\n\\n    try:\n\\n        with open(_ETC_OS_RELEASE, \"r\") as os_release_file:\n\\n            content = os_release_file.read()\n\\n    except Exception:\n\\n        return None\n\\n\n\\n    result = {}\n\\n    for line in content.splitlines():\n\\n        parts = line.split(\"=\", maxsplit=1)\n\\n        if len(parts) != 2:\n\\n            continue\n\\n\n\\n        key = parts[0].lower()\n\\n        value = parts[1].strip('\"')\n\\n\n\\n        result[key] = value\n\\n\n\\n    return result\n\\n\n\\n\n\\ndef _gather_runtime_environment(os_release: dict, hwinfo: dict):\n\\n    \"\"\"Gather information about runtime environment.\"\"\"\n\\n    return {\n\\n        \"cuda_version\": None,\n\\n        \"hardware\": {\"cpu_family\": hwinfo[\"cpu_info\"].get(\"family\"), \"cpu_model\": hwinfo[\"cpu_info\"].get(\"model\")},\n\\n        \"operating_system\": {\"name\": os_release[\"id\"], \"version\": os_release[\"version_id\"]},\n\\n        \"python_version\": \".\".join(map(str, sys.version_info[0:2])),\n\\n    }\n\\n\n\\n\n\\ndef main():\n\\n    \"\"\"Entrypoint for inspection container.\"\"\"\n\\n    # Load hardware info.\n\\n    hwinfo = None\n\\n    with open(_HWINFO_FILE, \"r\") as hwinfo_file:\n\\n        hwinfo = json.load(hwinfo_file)\n\\n\n\\n    # Execute the supplied script.\n\\n    if os.path.isdir(os.path.join(_EXEC_DIR, \"venv\")):\n\\n        args = [os.path.join(_EXEC_DIR, \"venv\", \"bin\", \"python3\"), _EXEC_FILE]\n\\n    else:\n\\n        args = [\"pipenv\", \"run\", _EXEC_FILE]\n\\n    with open(_EXEC_STDOUT_FILE, \"w\") as stdout_file, open(_EXEC_STDERR_FILE, \"w\") as stderr_file:\n\\n        process = subprocess.Popen(args, stdout=stdout_file, stderr=stderr_file, universal_newlines=True)\n\\n\n\\n    process.communicate()\n\\n\n\\n    usage_info = resource.getrusage(resource.RUSAGE_CHILDREN)\n\\n\n\\n    usage = {}\n\\n    for idx in range(len(_RESOURCE_STRUCT_RUSAGE_ITEMS)):\n\\n        usage[_RESOURCE_STRUCT_RUSAGE_ITEMS[idx]] = usage_info[idx]\n\\n\n\\n    # Load stdout and stderr.\n\\n    with open(_EXEC_STDOUT_FILE, \"r\") as stdout_file:\n\\n        stdout = stdout_file.read()\n\\n        try:\n\\n            stdout = json.loads(str(stdout))\n\\n        except Exception:\n\\n            # We were not able to load JSON, pass string as output.\n\\n            pass\n\\n\n\\n    # Gather os_release\n\\n    os_release = _gather_os_release()\n\\n\n\\n    # Create runtime environment output\n\\n    runtime_environment = _gather_runtime_environment(os_release, hwinfo)\n\\n\n\\n    with open(_EXEC_STDERR_FILE, \"r\") as stderr_file:\n\\n        stderr = stderr_file.read()\n\\n\n\\n    # Compute script SHA-256.\n\\n    sha256 = hashlib.sha256()\n\\n    with open(_EXEC_FILE, \"rb\") as script_file:\n\\n        while True:\n\\n            data = script_file.read(65536)\n\\n            if not data:\n\\n                break\n\\n\n\\n            sha256.update(data)\n\\n\n\\n    # Name return code as exit_code to be consistent in Thoth.\n\\n    report = {\n\\n        \"hwinfo\": hwinfo,\n\\n        \"stdout\": stdout or {},\n\\n        \"stderr\": stderr,\n\\n        \"exit_code\": process.returncode,\n\\n        \"script_sha256\": sha256.hexdigest(),\n\\n        \"usage\": usage,\n\\n        \"datetime\": datetime.utcnow().strftime(\"%Y-%m-%dT%H:%M:%S.%f\"),\n\\n        \"os_release\": os_release,\n\\n        \"runtime_environment\": runtime_environment,\n\\n        \"hostname\": platform.node(),\n\\n    }\n\\n\n\\n    output = json.dumps(report, sort_keys=True, indent=2)\n\\n\n\\n    output_fp = os.environ.get(\"THOTH_OUTPUT_PATH\")\n\\n    if output_fp:\n\\n        dir_name = os.path.dirname(output_fp)\n\\n        if dir_name:\n\\n            os.makedirs(dir_name, exist_ok=True)\n\\n\n\\n        with open(output_fp, \"w\") as output_file:\n\\n            output_file.write(output)\n\\n\n\\n    sys.exit(report[\"exit_code\"])\n\\n\n\\n\n\\nif __name__ == \"__main__\":\n\\n    main()\n\\n" > "/home/amun/entrypoint"
a0279b67aab691d850e5a08f9688c4ce9f4438c28c20a3efef5620d3b1fd34cb
STEP 13: RUN chmod a+x /home/amun/script /home/amun/entrypoint && touch /home/amun/script.stderr /home/amun/script.stdout && chmod 777 /home/amun/script.stderr /home/amun/script.stdout
c7fdf1c9b728f9a9dc70300a76501ac45aa1d094fc7c5f1f6c79a1d1c4c01b51
STEP 14: CMD ["/home/amun/entrypoint"]
cc2175597ece6d98f221ee35647e3d9a989f75c654f104ee352ce53b15bb5ed6
STEP 15: USER 1042
579be2ffb649147d3ea8b2a3d5069b406ba0b7d3ee24bc77d94155bdc7fa13f1
STEP 16: WORKDIR /home/amun
94d89f80e286668a94cdf4ff38ab1e424ee2eeed5252ab1dce6e22b80f6d3922
STEP 17: ENV "OPENSHIFT_BUILD_NAME"="inspection-tfcpu-matmul-5e5a1563-1" "OPENSHIFT_BUILD_NAMESPACE"="thoth-amun-inspection-stage"
757eab4661c9397a5a1b36cc9e4a2c4207707cdf9690460daac0809623ebb8c0
STEP 18: LABEL "io.openshift.build.name"="inspection-tfcpu-matmul-5e5a1563-1" "io.openshift.build.namespace"="thoth-amun-inspection-stage"
STEP 19: COMMIT temp.builder.openshift.io/thoth-amun-inspection-stage/inspection-tfcpu-matmul-5e5a1563-1:1d8f1784
0c3056a92f99e7fa70b9b6058bcd1887fd3a9c9bc3357c1689afed1072f24d89
0c3056a92f99e7fa70b9b6058bcd1887fd3a9c9bc3357c1689afed1072f24d89

Pushing image image-registry.openshift-image-registry.svc:5000/thoth-amun-inspection-stage/inspection-tfcpu-matmul-5e5a1563:latest ...
Getting image source signatures
Copying blob sha256:77c58f19bd6e67185938abb6bbb6ec229e07a5e607453904294d982de141d2f0
Copying blob sha256:d1080172124d46731af46c7e94f0b9912e1e8ae90962cd387d2b020f7b9567a3
Copying blob sha256:71391dc11a78542160544b68e45bc123ff55a2e84aeb6fa99b672d75765bc2f8
Copying blob sha256:d5e8f7f1544a0b24f6a422173079f16930b1b17b81e57cdeeb07f53a9629a4de
Copying blob sha256:6cc5487eb078291c64e0539c6d57546606b3936b71eabc7eec7960d069927ba4
Copying blob sha256:47db82df7f3f4393c1f19c362a2db2c47ca049b6fb20bef041dfc9bdb12a4504
Copying blob sha256:3407c8ea636172ca2a5ebdb6eb5aea6c25d016b63dbdf0869e23743fb78ea465
Copying blob sha256:cde6a5112f4e49e3e51f540df7b2599740d2f6de06e69bae2024fd8113cadb85
Copying blob sha256:fce4a0d364f2f97a0c0a17e8240b2f69b5bd54fb18f8c6bdf95e9cb285f1b03c
Copying blob sha256:3dd495542e2b0631a5b59222beef41bf198be2c185d60bc38b2f172aa7c775d4
Copying blob sha256:578451167d2e72a193b8b97416ff1b1631199bebc6840007d0d45794fa60ba1a
Copying blob sha256:bddd51c638a34b248082ef220bfdb89132479b903922c4d3942ec4c243ca3d07
Copying blob sha256:37a5b24c297fa2dc48e3aff302d1769fc3dc2e9c910b03e9b8b3c5b813c46b84
Copying blob sha256:552e963cb2e4542e4c7a91e17272bc7c218dc2d532e672e2e2444f51ba1ff0ac
Copying blob sha256:044d6e3ed250f9766e62d692f06fcece4f17301f6e7de45500b158183f2135bb
Copying blob sha256:ebd4a1b2d244249b4c5f5dd00f2e81e727ed05f764f8e947c6db1f80188704d3
Copying blob sha256:e4f6f741096445e1ae93a93a95bdf92f35afc12808fedd1337ad93dd394fd50a
Copying config sha256:0c3056a92f99e7fa70b9b6058bcd1887fd3a9c9bc3357c1689afed1072f24d89
Writing manifest to image destination
Storing signatures
Successfully pushed image-registry.openshift-image-registry.svc:5000/thoth-amun-inspection-stage/inspection-tfcpu-matmul-5e5a1563@sha256:bbbcb09fc9f3da59f29e40918495fcf8611c22d9e66043a771583bade158e357
Push successful
